import { describe, expect, it } from "vitest"
import { getSuccessAnswersAmount, type IQuestion, type IQuestState } from "../support"

describe("quest-page functions test", () => {
  it.only(() => {
    const QUESTIONS: IQuestion[] = [
      {
        title: "Какой из этих инструментов лучше всего подходит для краткосрочных сбережений?",
        variants: ["Инвестиционный фонд", "Сберегательный счет", "Пенсионный план"],
        description:
          "Сберегательный счет обычно предоставляет лучшую ликвидность и безопасность для краткосрочных сбережений.",
        rightVariant: "Сберегательный счет",
      },
      {
        title: 'Что такое "диверсификация" в инвестициях?',
        variants: [
          "Вложение всех средств в один актив",
          "Вложение денег в разные активы для снижения риска",
          "Инвестирование только в акции",
        ],
        description: "Диверсификация помогает распределить риск, инвестируя в различные активы.",
        rightVariant: "Вложение денег в разные активы для снижения риска",
      },
      {
        title: "Какой фактор наиболее важен при выборе кредитной карты?",
        variants: ["Процентная ставка", "Дизайн карты", "Количество рекламных предложений"],
        description: "Процентная ставка определяет стоимость кредитования.",
        rightVariant: "Процентная ставка",
      },
    ]
    const STATE1: IQuestState = {
      "Какой из этих инструментов лучше всего подходит для краткосрочных сбережений?": "Инвестиционный фонд",
      'Что такое "диверсификация" в инвестициях?': "Вложение денег в разные активы для снижения риска",
      "Какой фактор наиболее важен при выборе кредитной карты?": "Процентная ставка",
    }
    const STATE2: IQuestState = {
      "Какой из этих инструментов лучше всего подходит для краткосрочных сбережений?": "",
      'Что такое "диверсификация" в инвестициях?': "Вложение денег в разные активы для снижения риска",
      "Какой фактор наиболее важен при выборе кредитной карты?": "Процентная ставка",
    }
    const successAnswersAmount1 = getSuccessAnswersAmount(QUESTIONS, STATE1)
    const successAnswersAmount2 = getSuccessAnswersAmount(QUESTIONS, STATE2)

    expect(successAnswersAmount1).toBe(2)
    expect(successAnswersAmount2).toBe(1)
  })
})
